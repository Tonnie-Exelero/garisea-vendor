// schema.prisma

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider          = "postgresql"
    // url      = env("LOCAL_DATABASE_URL")
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id                 String               @id @default(cuid())
  createdAt          DateTime             @default(now()) @map(name: "created_at")
  updatedAt          DateTime             @updatedAt @map(name: "updated_at")
  firstName          String?
  lastName           String?
  username           String?
  email              String               @unique
  password           String
  phone              String?
  token              String?
  status             String?
  image              String?
  language           String?
  address            String?
  city               String?
  country            String?
  onlineStatus       String?
  role               Role?                @relation(fields: [roleId], references: [id])
  roleId             String?
  emailVerified      String?
  pl                 String?
  dt                 String?
  AdminVendorContact AdminVendorContact[]
  AdminVendorMessage AdminVendorMessage[]

  @@map(name: "AdminUsers")
}

model Vendor {
  id                    String                  @id @default(cuid())
  createdAt             DateTime                @default(now()) @map(name: "created_at")
  updatedAt             DateTime                @updatedAt @map(name: "updated_at")
  firstName             String?
  lastName              String?
  username              String?
  email                 String                  @unique
  password              String
  phone                 String?
  token                 String?
  status                String?
  image                 String?
  storeLink             String?                 @unique
  language              String?
  address               String?
  city                  String?
  country               String?
  emailVerified         String?
  vendorVerified        String?
  addedOrganization     String?
  identification        String?
  onlineStatus          String?
  organization          Organization?           @relation(fields: [organizationId], references: [id])
  organizationId        String?
  impressions           Int?
  pageOpened            Int?
  pl                    String?
  dt                    String?
  Vehicle               Vehicle[]
  AdminVendorContact    AdminVendorContact[]
  VendorCustomerContact VendorCustomerContact[]
  AdminVendorMessage    AdminVendorMessage[]
  VendorCustomerMessage VendorCustomerMessage[]
  VendorReview          VendorReview[]
  FeaturedVendor        FeaturedVendor[]
  FeaturedVehicle       FeaturedVehicle[]
  MainCarousel          MainCarousel[]
  Banner                Banner[]
}

model Customer {
  id                    String                  @id @default(cuid())
  createdAt             DateTime                @default(now()) @map(name: "created_at")
  updatedAt             DateTime                @updatedAt @map(name: "updated_at")
  firstName             String?
  lastName              String?
  username              String?
  email                 String                  @unique
  password              String
  phone                 String?
  token                 String?
  status                String?
  image                 String?
  language              String?
  address               String?
  city                  String?
  country               String?
  emailVerified         String?
  onlineStatus          String?
  pl                    String?
  dt                    String?
  VendorCustomerContact VendorCustomerContact[]
  VendorCustomerMessage VendorCustomerMessage[]
  VendorReview          VendorReview[]
  VehicleReview         VehicleReview[]
  Interest              Interest[]
}

model Organization {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @updatedAt @map(name: "updated_at")
  name        String   @unique
  nicename    String?
  email       String?
  phone       String?
  address     String?
  address2    String?
  city        String?
  country     String?
  coverImage  String?
  logo        String?
  certificate String?
  kraPin      String?
  pl          String?
  dt          String?
  Vendor      Vendor[]
}

model Permission {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @updatedAt @map(name: "updated_at")
  name        String   @unique
  slug        String   @unique
  description String?
  subjects    String?
  pl          String?
  dt          String?
  roles       Role[]
}

model Role {
  id          String       @id @default(cuid())
  createdAt   DateTime     @default(now()) @map(name: "created_at")
  updatedAt   DateTime     @updatedAt @map(name: "updated_at")
  name        String       @unique
  slug        String       @unique
  description String?
  ability     String?
  pl          String?
  dt          String?
  permissions Permission[]
  users       User[]
}

model Brand {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  name        String    @unique
  slug        String    @unique
  description String?
  image       String?
  pl          String?
  dt          String?
  Model       Model[]
  Vehicle     Vehicle[]
}

model Model {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  name        String
  slug        String
  description String?
  brand       Brand?    @relation(fields: [brandId], references: [id])
  brandId     String?
  pl          String?
  dt          String?
  Vehicle     Vehicle[]
}

model Vehicle {
  id                      String                  @id @default(cuid())
  createdAt               DateTime                @default(now()) @map(name: "created_at")
  updatedAt               DateTime                @updatedAt @map(name: "updated_at")
  entryNo                 String                  @unique
  vendor                  Vendor                  @relation(fields: [vendorId], references: [id])
  vendorId                String
  brand                   Brand                   @relation(fields: [brandId], references: [id])
  brandId                 String
  model                   Model                   @relation(fields: [modelId], references: [id])
  modelId                 String
  trim                    String?
  slug                    String?                 @unique
  yearOfManufacture       String?
  yearOfFirstRegistration String?
  registered              String?
  registrationNo          String?
  condition               String?
  mileage                 Int?
  mileageMetric           String?
  transmissionType        String?
  fuelType                String?
  engineCapacity          Int?
  exteriorColor           String?
  upholstery              String?
  images                  String?
  thumbnail               String?
  status                  String?
  viewingLocation         String?
  vehicleOriginCountry    String?
  engineType              String?
  driveType               String?
  vinNo                   String?
  bodyType                String?
  interiorColor           String?
  steering                String?
  seats                   Int?
  doors                   Int?
  listingPrice            Int?
  discountedPrice         Int?
  discountAmount          Int?
  allowedPaymentModes     String?
  offerType               String?
  features                String?
  extraInfo               String?
  reserved                String?
  sold                    String?
  publishedAt             String?
  impressions             Int?
  detailExpands           Int?
  interested              Int?
  vehicleVerified         String?
  pl                      String?
  dt                      String?
  VendorCustomerContact   VendorCustomerContact[]
  VendorCustomerMessage   VendorCustomerMessage[]
  VehicleReview           VehicleReview[]
  Interest                Interest[]
  FeaturedVehicle         FeaturedVehicle[]
}

model AdminVendorContact {
  id                String   @id @default(cuid())
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @updatedAt @map(name: "updated_at")
  user              User?    @relation(fields: [userId], references: [id])
  userId            String?
  vendor            Vendor?  @relation(fields: [vendorId], references: [id])
  vendorId          String?
  latestMessageTime String?
  pl                String?
  dt                String?
}

model AdminVendorMessage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  vendor    Vendor?  @relation(fields: [vendorId], references: [id])
  vendorId  String?
  senderId  String?
  type      String?
  message   String?
  timeSent  String?
  isSent    Boolean?
  isSeen    Boolean?
  pl        String?
  dt        String?
}

model VendorCustomerContact {
  id                String    @id @default(cuid())
  createdAt         DateTime  @default(now()) @map(name: "created_at")
  updatedAt         DateTime  @updatedAt @map(name: "updated_at")
  vendor            Vendor?   @relation(fields: [vendorId], references: [id])
  vendorId          String?
  customer          Customer? @relation(fields: [customerId], references: [id])
  customerId        String?
  vehicle           Vehicle?  @relation(fields: [vehicleId], references: [id])
  vehicleId         String?
  latestMessageTime String?
  pl                String?
  dt                String?
}

model VendorCustomerMessage {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now()) @map(name: "created_at")
  updatedAt  DateTime  @updatedAt @map(name: "updated_at")
  vendor     Vendor?   @relation(fields: [vendorId], references: [id])
  vendorId   String?
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  vehicle    Vehicle?  @relation(fields: [vehicleId], references: [id])
  vehicleId  String?
  senderId   String?
  type       String?
  message    String?
  timeSent   String?
  isSent     Boolean?
  isSeen     Boolean?
  pl         String?
  dt         String?
}

model VendorReview {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  vendor      Vendor?   @relation(fields: [vendorId], references: [id])
  vendorId    String?
  customer    Customer? @relation(fields: [customerId], references: [id])
  customerId  String?
  stars       Int?
  comment     String?
  status      String?
  count       String?
  rating      String?
  publishedAt String?
  pl          String?
  dt          String?
}

model VehicleReview {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  vehicle     Vehicle?  @relation(fields: [vehicleId], references: [id])
  vehicleId   String?
  customer    Customer? @relation(fields: [customerId], references: [id])
  customerId  String?
  stars       Int?
  comment     String?
  status      String?
  count       String?
  rating      String?
  publishedAt String?
  pl          String?
  dt          String?
}

model Interest {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now()) @map(name: "created_at")
  updatedAt  DateTime  @updatedAt @map(name: "updated_at")
  vehicle    Vehicle?  @relation(fields: [vehicleId], references: [id])
  vehicleId  String?
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  pl         String?
  dt         String?
}

model FeaturedVendor {
  id                String   @id @default(cuid())
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @updatedAt @map(name: "updated_at")
  vendor            Vendor?  @relation(fields: [vendorId], references: [id])
  vendorId          String?
  status            String?
  image             String?
  text              String?
  page              String?
  position          String?
  rank              Int?     @unique
  impressions       Int?
  clicks            Int?
  targetImpressions Int?
  targetClicks      Int?
  pl                String?
  dt                String?
}

model FeaturedVehicle {
  id                String   @id @default(cuid())
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @updatedAt @map(name: "updated_at")
  vendor            Vendor?  @relation(fields: [vendorId], references: [id])
  vendorId          String?
  vehicle           Vehicle? @relation(fields: [vehicleId], references: [id])
  vehicleId         String?
  status            String?
  page              String?
  position          String?
  rank              Int?     @unique
  impressions       Int?
  clicks            Int?
  targetImpressions Int?
  targetClicks      Int?
  pl                String?
  dt                String?
}

model MainCarousel {
  id                String   @id @default(cuid())
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @updatedAt @map(name: "updated_at")
  vendor            Vendor?  @relation(fields: [vendorId], references: [id])
  vendorId          String?
  status            String?
  type              String?
  title             String?
  image             String?
  buttonLink        String?
  buttonText        String?
  description       String?
  rank              Int?     @unique
  impressions       Int?
  clicks            Int?
  targetImpressions Int?
  targetClicks      Int?
  pl                String?
  dt                String?
}

model Banner {
  id                String   @id @default(cuid())
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @updatedAt @map(name: "updated_at")
  vendor            Vendor?  @relation(fields: [vendorId], references: [id])
  vendorId          String?
  status            String?
  type              String?
  title             String?
  link              String?
  image             String?
  page              String?
  position          String?
  rank              Int?     @unique
  impressions       Int?
  clicks            Int?
  targetImpressions Int?
  targetClicks      Int?
  pl                String?
  dt                String?
}
